const typewriterMapping = {
  a: "ùóÆ", b: "ùóØ", c: "ùó∞", d: "ùó±", e: "ùó≤", f: "ùó≥", g: "ùó¥", h: "ùóµ", i: "ùó∂",
  j: "ùó∑", k: "ùó∏", l: "ùóπ", m: "ùó∫", n: "ùóª", o: "ùóº", p: "ùóΩ", q: "ùóæ", r: "ùóø",
  s: "ùòÄ", t: "ùòÅ", u: "ùòÇ", v: "ùòÉ", w: "ùòÑ", x: "ùòÖ", y: "ùòÜ", z: "ùòá",
  A: "ùóî", B: "ùóï", C: "ùóñ", D: "ùóó", E: "ùóò", F: "ùóô", G: "ùóö", H: "ùóõ", I: "ùóú",
  J: "ùóù", K: "ùóû", L: "ùóü", M: "ùó†", N: "ùó°", O: "ùó¢", P: "ùó£", Q: "ùó§", R: "ùó•",
  S: "ùó¶", T: "ùóß", U: "ùó®", V: "ùó©", W: "ùó™", X: "ùó´", Y: "ùó¨", Z: "ùó≠",
  " ": " "
};
const {cookies} = 'eQhTg9PeSb4dDoCnbfUHTREkZF3cLfS4ZH3CxDYXiDI128OGhFn8fqL426tfFrCz7OADmw.';
module.exports = {
  run: async function({ axios, app, requestHandler }) {

    app.get('/api/bard', async (req, res) => {
      let { prompt, uid, attImg, name } = req.query

      if (!prompt || !uid) {
        return res.status(400).json({ error: "Missing 'prompt' and 'uid' parameter!" });
      }

      const handle = await requestHandler.userRequest(uid, name );
      if (handle) {
        return res.json({result: handle.error});
      }

      try {
        if (attImg) {
          var response = await axios.get(`https://api-bard.easy0.repl.co/api/bard?message=${encodeURIComponent(prompt)}&url=${encodeURIComponent(attImg)}&userID=${encodeURIComponent(uid)}&api=ISOYXD`);
        } else {
          response = await axios.get(`https://api-bard.easy0.repl.co/api/bard?message=${encodeURIComponent(prompt)}&userID=${encodeURIComponent(uid)}&api=ISOYXD`);
        }
        const result = response.data;
        const textToRemove = "\nThis API is Developed and Maintained by ADONIS JR S Sanchez (ISOY DEV)\nwww.facebook.com/buckyy26";
        const cleanedResult = result.content.endsWith(textToRemove) ? result.content.slice(0, -textToRemove.length) : result.content;

          res.json({ result: cleanedResult, images: result.images });
          return;
      } catch (error) {
        console.error(`Easyapi0: ${error}`);
      }

      try {
        const params = {
          prompt: encodeURIComponent(prompt),
          cookie: encodeURIComponent('eQhTg9PeSb4dDoCnbfUHTREkZF3cLfS4ZH3CxDYXiDI128OGhFn8fqL426tfFrCz7OADmw.'),
          attImage: '',
          apiKey: encodeURIComponent('SiAM_xcxndu')
        };

        if (attImg) {
          params.attImage = encodeURIComponent(attImg);
        }

        const response = await axios.get('https://api.siambardproject.repl.co/getBard', {
          params: params,
        });
        const result = response.data;

        const cleanedAnswer = result.answer.replace(/\n{3,}/g, '\n\n');
        const finalAnswer = cleanedAnswer.replace(/‚ùè/g, '');

        let responseBody = {
          result: finalAnswer,
          attachment: result.attachment || [],
        };

    res.status(200).json(responseBody);
        return;
      } catch (error) {
        console.error(`siambardproject: ${error}`);
      }

    });
  }
};
